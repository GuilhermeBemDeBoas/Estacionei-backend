/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.estacionei.api;

import io.swagger.annotations.*;

import org.estacionei.model.Estacionamento;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.estacionei.codegen.languages.SpringCodegen", date = "2019-09-20T20:35:29.312-03:00[America/Sao_Paulo]")

@Validated
@Api(value = "estacionamentos", description = "the estacionamentos API")
public interface EstacionamentosApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "consulta um estacionamento estabelecimento", nickname = "estacionamentosIdEstacionamentoGet", notes = "consulta um estacionamento estabelecimento", response = Estacionamento.class, tags={ "estacionamentos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Estacionamento.class),
        @ApiResponse(code = 404, message = "estacionamento não encontrado") })
    @RequestMapping(value = "/estacionamentos/{id_estacionamento}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Estacionamento> estacionamentosIdEstacionamentoGet(@ApiParam(value = "",required=true) @PathVariable("id_estacionamento") String idEstacionamento,@ApiParam(value = "") @Valid @RequestParam(value = "expand", required = false) String expand) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"vagas\" : [ {    \"tipo_vaga\" : \"normal\",    \"localizacao\" : {      \"andar\" : \"andar\",      \"latitude\" : \"latitude\",      \"longitude\" : \"longitude\"    },    \"preco_hora\" : \"preco_hora\",    \"id_vaga\" : \"id_vaga\",    \"status\" : true  }, {    \"tipo_vaga\" : \"normal\",    \"localizacao\" : {      \"andar\" : \"andar\",      \"latitude\" : \"latitude\",      \"longitude\" : \"longitude\"    },    \"preco_hora\" : \"preco_hora\",    \"id_vaga\" : \"id_vaga\",    \"status\" : true  } ],  \"endereco\" : \"endereco\",  \"mapa\" : {    \"tipo_vaga\" : \"normal\",    \"localizacao\" : {      \"andar\" : \"andar\",      \"latitude\" : \"latitude\",      \"longitude\" : \"longitude\"    },    \"preco_hora\" : \"preco_hora\",    \"id_vaga\" : \"id_vaga\",    \"status\" : true  },  \"entradas\" : [ {    \"andar\" : \"andar\",    \"latitude\" : \"latitude\",    \"longitude\" : \"longitude\"  }, {    \"andar\" : \"andar\",    \"latitude\" : \"latitude\",    \"longitude\" : \"longitude\"  } ],  \"nome\" : \"nome\",  \"id_estacionanto\" : \"id_estacionanto\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "cadastra um novo estabelecimento", nickname = "estacionamentosPost", notes = "cadastra um novo estabelecimento", tags={ "estacionamentos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "criado com sucesso"),
        @ApiResponse(code = 400, message = "requisição invalida") })
    @RequestMapping(value = "/estacionamentos",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> estacionamentosPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Estacionamento estacionamento) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
